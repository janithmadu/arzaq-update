version: '3.9'

services:
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx_proxy
  #   ports:
  #     - "80:80"  # Expose HTTP
  #     - "443:443"  # Expose HTTPS
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Mount the Nginx config
  #     # - /root/arzaq-update/certs:/etc/nginx/certs:ro  # Mount the SSL certificates
  #   depends_on:
  #     - arzaq_web
  #   networks:
  #     - web_network
  #   restart: always

  arzaq_web:
    image: arzaq_web:latest  # Use your built image
    container_name: arzaq_web_container
    build:
      context: .  # Ensure your Dockerfile is in the current directory
    ports:
      - "3000:3000"  # Map port 3000 on the host to port 3000 in the container
    env_file:
      - .env.local,.env  # If you're using an .env file
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SHADOW_DATABASE_URL=${SHADOW_DATABASE_URL}
      - BASEURL=${BASEURL}
      - NEXT_PUBLIC_SANITY_PROJECT_ID=${NEXT_PUBLIC_SANITY_PROJECT_ID}
      - NEXT_PUBLIC_SANITY_DATASET=true
      - NEXT_PUBLIC_SANITY_USER_ADDER_TOKEN=${NEXT_PUBLIC_SANITY_USER_ADDER_TOKEN}
      - NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}
      - NEXT_PUBLIC_UPLOAD_PRESET=${NEXT_PUBLIC_UPLOAD_PRESET}
      - NEXT_PUBLIC_CLOUDINARY_API_KEY=${NEXT_PUBLIC_CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - KINDE_CLIENT_ID=${KINDE_CLIENT_ID}
      - KINDE_CLIENT_SECRET=${KINDE_CLIENT_SECRET}
      - KINDE_ISSUER_URL=${KINDE_ISSUER_URL}
      - KINDE_SITE_URL=${KINDE_SITE_URL}
      - KINDE_POST_LOGOUT_REDIRECT_URL=${KINDE_POST_LOGOUT_REDIRECT_URL}
      - KINDE_POST_LOGIN_REDIRECT_URL=${KINDE_POST_LOGIN_REDIRECT_URL}
      - NEXT_PUBLIC_KINDE_CONNECTION_EMAIL_PASSWORDLESS=${NEXT_PUBLIC_KINDE_CONNECTION_EMAIL_PASSWORDLESS}
      - NEXT_PUBLIC_KINDE_CONNECTION_EMAIL_PASSWORD=${NEXT_PUBLIC_KINDE_CONNECTION_EMAIL_PASSWORD}
      - NEXT_PUBLIC_KINDE_CONNECTION_GOOGLE=${NEXT_PUBLIC_KINDE_CONNECTION_GOOGLE}
    networks:
      - web_network  # Ensure this network exists in the same file or is defined elsewhere
    restart: always  # Restart policy for container resilience

networks:
  web_network:
    driver: bridge
